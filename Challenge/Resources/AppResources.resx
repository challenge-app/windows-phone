<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ResourceFlowDirection" xml:space="preserve">
    <value>LeftToRight</value>
    <comment>Controls the FlowDirection for all elements in the RootFrame. Set to the traditional direction of this resource file's language</comment>
  </data>
  <data name="ResourceLanguage" xml:space="preserve">
    <value>en-US</value>
    <comment>Controls the Language and ensures that the font for all elements in the RootFrame aligns with the app's language. Set to the language code of this resource file's language.</comment>
  </data>
  <data name="ApplicationTitle" xml:space="preserve">
    <value>Challenge</value>
  </data>
  <data name="Feed" xml:space="preserve">
    <value>Feed</value>
  </data>
  <data name="Notifications" xml:space="preserve">
    <value>Notifications</value>
  </data>
  <data name="Discover" xml:space="preserve">
    <value>Discover</value>
  </data>
  <data name="Profile" xml:space="preserve">
    <value>Profile</value>
  </data>
  <data name="NewChallenge" xml:space="preserve">
    <value>New Challenge</value>
  </data>
  <data name="New" xml:space="preserve">
    <value>New</value>
  </data>
  <data name="Refresh" xml:space="preserve">
    <value>Refresh</value>
  </data>
  <data name="Search" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="Username" xml:space="preserve">
    <value>Username</value>
  </data>
  <data name="CreateAccount" xml:space="preserve">
    <value>Create Account</value>
  </data>
  <data name="Login" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="Logout" xml:space="preserve">
    <value>Logout</value>
  </data>
  <data name="Settings" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="Loading" xml:space="preserve">
    <value>Loading</value>
  </data>
  <data name="ERROR_MISSING_PARAMETER" xml:space="preserve">
    <value>Missing parameter: '{0}'</value>
  </data>
  <data name="ERROR_USER_ALREADY_EXISTS" xml:space="preserve">
    <value>User already exists :/</value>
  </data>
  <data name="ERROR_PLEASE_SIGN_IN" xml:space="preserve">
    <value>Please sign in </value>
  </data>
  <data name="ERROR_ALREADY_FOLLOWING" xml:space="preserve">
    <value>You are already following this user</value>
  </data>
  <data name="ERROR_CHALLENGE_ALREADY_DOUBTED" xml:space="preserve">
    <value>You already doubted this challenge</value>
  </data>
  <data name="ERROR_CHALLENGE_ALREADY_KILLED" xml:space="preserve">
    <value>You already liked this challenge</value>
  </data>
  <data name="ERROR_CHALLENGE_ALREADY_REFUSED" xml:space="preserve">
    <value>Challenge has been already refused</value>
  </data>
  <data name="ERROR_CHALLENGE_IS_FINALIZED" xml:space="preserve">
    <value>This challenge is finalized (accepted or refused)</value>
  </data>
  <data name="ERROR_CHALLENGE_NOT_A_FOLLOWER" xml:space="preserve">
    <value>This user only accepts followers challenges</value>
  </data>
  <data name="ERROR_CHALLENGE_NOT_FOUND" xml:space="preserve">
    <value>Challenge not found</value>
  </data>
  <data name="ERROR_CHALLENGE_NOT_YOURS" xml:space="preserve">
    <value>This challenge does not belong to you</value>
  </data>
  <data name="ERROR_CHALLENGE_YOURSELF" xml:space="preserve">
    <value>You cannot challenge yourself :P</value>
  </data>
  <data name="ERROR_INVALID_PARAMETER_TYPE" xml:space="preserve">
    <value>Parameter 'type' must be equal to 'video' or 'picture'</value>
  </data>
  <data name="ERROR_JUST_SIGNOUT" xml:space="preserve">
    <value>You just have signed out</value>
  </data>
  <data name="ERROR_PASSWORD_INCORRECT" xml:space="preserve">
    <value>Oops! Password incorrent</value>
  </data>
  <data name="ERROR_USER_NOT_FOUND" xml:space="preserve">
    <value>User not found</value>
  </data>
  <data name="LoggingIn" xml:space="preserve">
    <value>Logging in</value>
  </data>
  <data name="PleaseWait" xml:space="preserve">
    <value>Please wait</value>
  </data>
  <data name="Just1Sec" xml:space="preserve">
    <value>Just one second</value>
  </data>
  <data name="AccomplishedTheChallenge" xml:space="preserve">
    <value>Met the challenge</value>
  </data>
  <data name="SomethingWentWrong" xml:space="preserve">
    <value>Sorry, something went wrong</value>
  </data>
  <data name="CreatingAccount" xml:space="preserve">
    <value>Creating account</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="ChallengeVerb" xml:space="preserve">
    <value>Challenge</value>
  </data>
  <data name="Comments" xml:space="preserve">
    <value>Comments</value>
  </data>
  <data name="AMinuteAgo" xml:space="preserve">
    <value>a minute ago</value>
  </data>
  <data name="AnHourAgo" xml:space="preserve">
    <value>an hour ago</value>
  </data>
  <data name="JustNow" xml:space="preserve">
    <value>just now</value>
  </data>
  <data name="NDaysAgo" xml:space="preserve">
    <value>{0}d</value>
  </data>
  <data name="NHoursAgo" xml:space="preserve">
    <value>{0}h</value>
  </data>
  <data name="NMinutesAgo" xml:space="preserve">
    <value>{0} min</value>
  </data>
  <data name="NMonthsAgo" xml:space="preserve">
    <value>{0} months</value>
  </data>
  <data name="NWeeksAgo" xml:space="preserve">
    <value>{0} weeks</value>
  </data>
  <data name="NYearsAgo" xml:space="preserve">
    <value>{0} years</value>
  </data>
  <data name="OneMonthAgo" xml:space="preserve">
    <value>last month</value>
  </data>
  <data name="OneWeekAgo" xml:space="preserve">
    <value>last week</value>
  </data>
  <data name="OneYearAgo" xml:space="preserve">
    <value>last year</value>
  </data>
  <data name="Yesterday" xml:space="preserve">
    <value>1d</value>
  </data>
  <data name="MyProfile" xml:space="preserve">
    <value>My profile</value>
  </data>
  <data name="Like" xml:space="preserve">
    <value>Like</value>
  </data>
  <data name="Likes" xml:space="preserve">
    <value>Likes</value>
  </data>
  <data name="Follower" xml:space="preserve">
    <value>Follower</value>
  </data>
  <data name="Followers" xml:space="preserve">
    <value>Followers</value>
  </data>
  <data name="Following" xml:space="preserve">
    <value>Following</value>
  </data>
  <data name="Followings" xml:space="preserve">
    <value>Following</value>
  </data>
  <data name="Picture" xml:space="preserve">
    <value>Picture</value>
  </data>
  <data name="Video" xml:space="preserve">
    <value>Video</value>
  </data>
  <data name="About" xml:space="preserve">
    <value>About</value>
  </data>
  <data name="General" xml:space="preserve">
    <value>General</value>
  </data>
  <data name="IChallengeYouTo" xml:space="preserve">
    <value>I challenge you to</value>
  </data>
  <data name="Reward" xml:space="preserve">
    <value>Reward</value>
  </data>
  <data name="SelectFriend" xml:space="preserve">
    <value>Select friend</value>
  </data>
  <data name="Type" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="YourEmail" xml:space="preserve">
    <value>Your e-mail</value>
  </data>
  <data name="YourFullName" xml:space="preserve">
    <value>Your full name</value>
  </data>
  <data name="YourUsername" xml:space="preserve">
    <value>Your username</value>
  </data>
  <data name="NewChallengeDescriptionExample" xml:space="preserve">
    <value>Dance like a super crazy</value>
  </data>
  <data name="NewChallengeRewardExample" xml:space="preserve">
    <value>A drink</value>
  </data>
  <data name="Archive" xml:space="preserve">
    <value>Archive</value>
  </data>
  <data name="People" xml:space="preserve">
    <value>People</value>
  </data>
  <data name="Tags" xml:space="preserve">
    <value>Tags</value>
  </data>
  <data name="ERROR_ALREADY_NOT_FOLLOWING" xml:space="preserve">
    <value>You were not following this user</value>
  </data>
  <data name="ChallengedYou" xml:space="preserve">
    <value>Challenged you</value>
  </data>
  <data name="FirstName" xml:space="preserve">
    <value>First name</value>
  </data>
  <data name="LastName" xml:space="preserve">
    <value>Last name</value>
  </data>
  <data name="NetworkError" xml:space="preserve">
    <value>Network error</value>
  </data>
  <data name="Mute" xml:space="preserve">
    <value>Mute</value>
  </data>
  <data name="Unmute" xml:space="preserve">
    <value>Unmute</value>
  </data>
  <data name="Reputation" xml:space="preserve">
    <value>Reputation</value>
  </data>
  <data name="YouWereChallenged" xml:space="preserve">
    <value>You were challenged!</value>
  </data>
  <data name="AcceptingChallenge" xml:space="preserve">
    <value>Accepting challenge</value>
  </data>
  <data name="RefusingChallenge" xml:space="preserve">
    <value>Refusing challenge</value>
  </data>
  <data name="Uploading" xml:space="preserve">
    <value>Uploading</value>
  </data>
  <data name="Saving" xml:space="preserve">
    <value>Saving</value>
  </data>
</root>